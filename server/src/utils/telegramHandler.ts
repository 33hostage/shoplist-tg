import fetch from "node-fetch"

const BOT_TOKEN = process.env.BOT_TOKEN
const WEB_APP_URL = "https://shoplist-tg.vercel.app/"

async function handleTelegramMessage(message: any) {
	const chatId = message.chat.id
	const text = message.text
	const apiUrl = `https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`

	if (text && text.startsWith("/start")) {
		const payload = text.substring(6).trim()

		if (payload.startsWith("app_")) {
			const listId = payload.substring(4)
			const webAppUrl = `${WEB_APP_URL}?listId=${listId}`

			const buttonPayload = {
				chat_id: chatId,
				text: "–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å —Å–æ–≤–º–µ—Å—Ç–Ω—ã–π —Å–ø–∏—Å–æ–∫",
				reply_markup: {
					inline_keyboard: [
						[{ text: "–û—Ç–∫—Ä—ã—Ç—å —Å–ø–∏—Å–æ–∫", web_app: { url: webAppUrl } }],
					],
				},
			}

			await fetch(apiUrl, {
				method: "POST",
				headers: { "Content-Type": "application/json" },
				body: JSON.stringify(buttonPayload),
			})
		} else {
			const simplePayload = {
				chat_id: chatId,
				text: "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞–º–∏. –í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é –∏–ª–∏ –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å—Å—ã–ª–∫–æ–π –Ω–∞ —Å–ø–∏—Å–æ–∫.",
			}

			await fetch(apiUrl, {
				method: "POST",
				headers: { "Content-Type": "application/json" },
				body: JSON.stringify(simplePayload),
			})
		}
	} else if (text === "/help") {
		const helpText = `
			üëã *–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç Simple List, —Ç–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ —Å–æ–≤–º–µ—Å—Ç–Ω—ã—Ö —Å–ø–∏—Å–∫–∞—Ö.*

		*–ö–∞–∫ –Ω–∞—á–∞—Ç—å:*

			1. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–û—Ç–∫—Ä—ã—Ç—å —Å–ø–∏—Å–∫–∏" –≤ –º–µ–Ω—é –≤–≤–æ–¥–∞ (–∏–ª–∏ –∫–æ–º–∞–Ω–¥—É /newlist).
			2. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ –≤ Simple List App.

		*–ö–∞–∫ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–ø–∏—Å–∫–æ–º:*
		
			1. –û—Ç–∫—Ä–æ–π—Ç–µ –ª—é–±–æ–π —Å–ø–∏—Å–æ–∫.
			2. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–ø–∏—Å–∫–æ–º".
			3. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å—Å—ã–ª–∫—É –¥—Ä—É–≥—É.

		–ö–æ–≥–¥–∞ –¥—Ä—É–≥ –ø–µ—Ä–µ–π–¥–µ—Ç –ø–æ —Å—Å—ã–ª–∫–µ, —è –æ—Ç–ø—Ä–∞–≤–ª—é –µ–º—É –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –æ–Ω —Å—Ä–∞–∑—É –æ—Ç–∫—Ä—ã–ª –≤–∞—à –æ–±—â–∏–π —Å–ø–∏—Å–æ–∫!
			  `

		const helpPayload = {
			chat_id: chatId,
			text: helpText.trim(),
			parse_mode: "Markdown",
		}

		await fetch(apiUrl, {
			method: "POST",
			headers: { "Content-Type": "application/json" },
			body: JSON.stringify(helpPayload),
		})
	}
}

export default handleTelegramMessage
